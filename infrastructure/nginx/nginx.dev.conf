# DEVELOPMENT Nginx configuration - EXACT production patterns
# Only difference: doesn't include app2 which doesn't exist in dev

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimize for small server resources
worker_rlimit_nofile 65535;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings - EXACT as production
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format - EXACT as production
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance optimizations - EXACT as production
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Buffer settings - EXACT as production
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Gzip compression - EXACT as production
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/javascript application/x-javascript application/x-font-ttf application/x-web-app-manifest+json text/x-cross-domain-policy;
    gzip_disable "msie6";
    
    # Cache settings - EXACT as production
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=app_cache:10m max_size=100m inactive=60m use_temp_path=off;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_methods GET HEAD;
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 404 1m;
    
    # Rate limiting - EXACT as production
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=app_limit:10m rate=30r/s;
    
    # Security headers - EXACT as production
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # Upstream definitions - EXACT as production (only services that exist)
    upstream health_check {
        server 127.0.0.1:80;
        keepalive 32;
    }
    
    # App1 upstream definitions - EXACT as production
    upstream app1_frontend {
        server app1-frontend:80;
        keepalive 32;
    }
    
    upstream app1_backend {
        server app1-backend:3000;
        keepalive 32;
    }
    
    # Default server block - EXACT as production
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # Skip HTTPS redirect for development
        # In production this would redirect to HTTPS
        
        # Auth Service API - EXACT as production
        location /api/auth/ {
            proxy_pass http://mhylle-auth-service:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers - adjusted for development
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            add_header Access-Control-Allow-Credentials "true" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            
            # Connection settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Health check endpoint - EXACT as production
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'OK';
        }
        
        # Root redirect - EXACT as production
        location = / {
            return 301 /app1/;
        }
        
        # Include application-specific configurations - EXACT as production pattern
        include /etc/nginx/conf.d/*.conf;
    }
}
# Nginx configuration for app1
# Handles routing for frontend and backend services

# Upstream definitions for app1 services
upstream app1_frontend {
    server app1-frontend:80;
    keepalive 32;
}

upstream app1_backend {
    server app1-backend:3000;
    keepalive 32;
}

# HTTP server block for app1 (HTTPS disabled until certificates available)
server {
    listen 80;
    server_name _;
    
    # Frontend routes - Angular application
    location /app1/ {
        # Rate limiting for web requests
        limit_req zone=web burst=20 nodelay;
        
        # Remove /app1 prefix and proxy to frontend
        rewrite ^/app1/(.*)$ /$1 break;
        proxy_pass http://app1_frontend/;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Security headers
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Cache control for static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Frame-Options SAMEORIGIN always;
            add_header X-Content-Type-Options nosniff always;
            proxy_pass http://app1_frontend;
        }
    }
    
    # Backend API routes
    location /api/app1/ {
        # Rate limiting for API requests
        limit_req zone=api burst=10 nodelay;
        
        # Remove /api/app1 prefix before forwarding to backend
        rewrite ^/api/app1/(.*)$ /$1 break;
        proxy_pass http://app1_backend/;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # WebSocket support for app1 (if needed)
    location /api/app1/ws/ {
        proxy_pass http://app1_backend/api/app1/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # App1 health check endpoints
    location /health/app1 {
        access_log off;
        proxy_pass http://app1_backend/health;
        proxy_set_header Host $host;
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
    }
}

# Original HTTPS server block - DISABLED (SSL certificates not available)
# SSL configuration commented out until certificates are properly configured
# 
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name mhylle.com www.mhylle.com;
#     
#     # SSL certificates (inherited from main config)
#     ssl_certificate /etc/nginx/ssl/mhylle.com.crt;
#     ssl_certificate_key /etc/nginx/ssl/mhylle.com.key;
#     
#     # Frontend routes - Angular application
#     location /app1 {
#         # Rate limiting for web requests
#         limit_req zone=web burst=20 nodelay;
#         
#         # Remove /app1 prefix and proxy to frontend
#         rewrite ^/app1/(.*)$ /$1 break;
#         proxy_pass http://app1_frontend/;
#         
#         # Proxy headers
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Forwarded-Host $host;
#         
#         # Security headers
#         add_header X-Frame-Options SAMEORIGIN always;
#         add_header X-Content-Type-Options nosniff always;
#         add_header X-XSS-Protection "1; mode=block" always;
#         add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#         
#         # Cache control for static assets
#         location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
#             expires 1y;
#             add_header Cache-Control "public, immutable";
#             add_header X-Frame-Options SAMEORIGIN always;
#             add_header X-Content-Type-Options nosniff always;
#             proxy_pass http://app1_frontend;
#         }
#     }
#     
#     # Backend API routes
#     location /api/app1/ {
#         # Rate limiting for API requests
#         limit_req zone=api burst=10 nodelay;
#         
#         # Remove /api/app1 prefix before forwarding to backend
#         rewrite ^/api/app1/(.*)$ /$1 break;
#         proxy_pass http://app1_backend/;
#         
#         # Proxy headers
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Forwarded-Host $host;
#         
#         # CORS headers for API
#         add_header Access-Control-Allow-Origin "https://mhylle.com" always;
#         add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
#         add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
#         add_header Access-Control-Allow-Credentials "true" always;
#         
#         # Handle preflight requests
#         if ($request_method = 'OPTIONS') {
#             add_header Access-Control-Allow-Origin "https://mhylle.com" always;
#             add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
#             add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
#             add_header Access-Control-Allow-Credentials "true" always;
#             add_header Content-Length 0;
#             add_header Content-Type text/plain;
#             return 204;
#         }
#     }
#     
#     # WebSocket support for app1 (if needed)
#     location /api/app1/ws/ {
#         proxy_pass http://app1_backend/api/app1/ws/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
#     
#     # App1 health check endpoints
#     location /health/app1 {
#         access_log off;
#         proxy_pass http://app1_backend/health;
#         proxy_set_header Host $host;
#         proxy_connect_timeout 5s;
#         proxy_read_timeout 5s;
#     }
# }
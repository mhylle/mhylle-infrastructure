version: '3.8'

services:
  # Nginx reverse proxy - core infrastructure
  nginx:
    image: nginx:alpine
    container_name: mhylle-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/nginx/apps:/etc/nginx/conf.d:ro
      - ./infrastructure/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
      - /var/run/docker.sock:/tmp/docker.sock:ro  # For dynamic configs
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # PostgreSQL database - shared across all applications
  postgres:
    image: postgres:15-alpine
    container_name: mhylle-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mhylle_main}
      POSTGRES_USER: ${POSTGRES_USER:-mhylle_admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql:ro
      - ./logs/postgres:/var/log/postgresql
    networks:
      - app-network
    restart: unless-stopped
    ports:
      - "127.0.0.1:5432:5432"  # Only localhost access
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mhylle_admin} -d ${POSTGRES_DB:-mhylle_main}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Watchtower for automatic updates of infrastructure images
  watchtower:
    image: containrrr/watchtower
    container_name: mhylle-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_MONITOR_ONLY=true
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/docker/volumes/mhylle_postgres_data
